name: Update playlist

on:
  # Run around 09:00 Europe/Dublin all year (DST-safe gate below)
  schedule:
    - cron: "0 8 * * *"
    - cron: "0 9 * * *"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Dublin
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Gate to 09:00 Europe/Dublin (scheduled runs only)
        if: github.event_name == 'schedule'
        id: gate
        run: |
          echo "Local time: $(date)"
          if [ "$(date +%H)" = "09" ]; then
            echo "ok=true" >> $GITHUB_OUTPUT
          else
            echo "ok=false" >> $GITHUB_OUTPUT
          fi

      - name: Debug Spotify env
        if: github.event_name != 'schedule' || steps.gate.outputs.ok == 'true'
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
          SPOTIFY_REDIRECT_URI: ${{ secrets.SPOTIFY_REDIRECT_URI }}
          OW_API_KEY: ${{ secrets.OW_API_KEY }}
          OW_CITY: ${{ vars.OW_CITY }}
          PLAYLIST_ID: ${{ secrets.PLAYLIST_ID }}
          TRACK_COUNT: ${{ vars.TRACK_COUNT || '12' }}
          DRY_RUN: "false"
          MOODIFY_MODE: "scheduler"
        run: |
          for i in 1 2 3; do
            python weather_playlist.py && exit 0
            echo "Attempt $i failed; retrying..." >&2
            sleep $((i*15))
          done
          echo "All attempts failed." >&2
          exit 1
          [ -n "${SPOTIFY_CLIENT_ID}" ] && echo "CLIENT_ID=present" || echo "CLIENT_ID=<missing>"
          [ -n "${SPOTIFY_CLIENT_SECRET}" ] && echo "CLIENT_SECRET=present" || echo "CLIENT_SECRET=<missing>"
          [ -n "${SPOTIFY_REFRESH_TOKEN}" ] && echo "REFRESH_TOKEN=present" || echo "REFRESH_TOKEN=<missing>"
          echo "REDIRECT_URI=${SPOTIFY_REDIRECT_URI:-<empty>}"
          echo "OW_CITY=${OW_CITY:-<empty>}"
          echo "TRACK_COUNT=${TRACK_COUNT:-<empty>}"
          [ -n "${PLAYLIST_ID}" ] && echo "PLAYLIST_ID=present" || echo "PLAYLIST_ID=<missing>"
          [ -n "${OW_API_KEY}" ] && echo "OW_API_KEY=present" || echo "OW_API_KEY=<missing>"
      
      - name: Run weatherâ†’playlist
        # run if manual OR (scheduled and gate passed)
        if: github.event_name != 'schedule' || steps.gate.outputs.ok == 'true'
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
          SPOTIFY_REDIRECT_URI: ${{ secrets.SPOTIFY_REDIRECT_URI }}
          OW_API_KEY: ${{ secrets.OW_API_KEY }}
          OW_CITY: ${{ vars.OW_CITY }}
          PLAYLIST_ID: ${{ secrets.PLAYLIST_ID }}
          TRACK_COUNT: ${{ vars.TRACK_COUNT || '12' }}
          DRY_RUN: "false"
          MOODIFY_MODE: "scheduler"
        run: python weather_playlist.py


      - name: Upload logs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: moodify-logs
          path: logs/
          if-no-files-found: ignore